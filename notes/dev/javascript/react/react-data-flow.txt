### React - Data Flow

A quick introduction to data flow in the [React](http://facebook.github.io/react/) JavaScript library.

#### Contents
* Introduction
* Properties (`props`)

##### Introduction
Data flows in one direction in React, namely from parent to the child. This helps to make components nice and simple, and predictable as well.

In essence, components take *props* from the parent, and then render. If a *prop* has been changed, for whatever reason, React will update the component tree for that change, and then re-render any components that used that property.

Internal state also exists for each component, and this should only be updated within the component itself.

##### Properties (`props`)
Properties, or `props`, can hold any data and are passed to a component for usage. As developers, we can set `props` on a component during instantiation

```
var classics = [{ title: 'Greek'}];
<ListClassics classics={classics}/>
```

We can also use the `setProps` method on a given instance of a component.

```
var classics = [{ title: 'Greek'}];
var listClassics = React.render (
	<ListSurveys/>,
	document.querySelector('body')
	);
	listSurveys.setProps({ surveys: surveys });
```

However, this option should only really be used to set `props` on a child component or outside of the component tree.

**NB:** we can access `props` via `this.props`, but it should not be used to write directly to `props`. In effect, a component should not modify its own props.
