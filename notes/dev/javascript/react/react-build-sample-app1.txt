### React - Build a Sample App 1

A quick overview of building a basic sample app with the React JavaScript library. Further details are available at the [React](http://facebook.github.io/react/) website.

#### Contents
* Introduction
* Setup
  * server
  * initial HTML
* First component

##### Introduction
This note focuses on how to build a basic sample application with the [React](http://facebook.github.io/react/) JavaScript library.

It follows the example *comments* application available in the React [Tutorial](http://facebook.github.io/react/docs/tutorial.html).

This app includes the following basic features,

* rendered output view of all of the comments
* a simple form to submit new comments
* hooks, where applicable, to provide a custom backend for the application

It will also include some quirky test features,

* optimistic commenting - comments will appear in the rendered output view before they're saved to the server
* live updates - comments created by other users will be added to the rendered output view in real time
* Markdown formatting - comment creation will support Markdown formatting

##### Setup
A few quick requirements to setup our basic application. This app assumes you have downloaded the latest version of the `react.js` and `JSXTransformer.js` files from the React website.

###### Server
To run and test this application, in particular the `POST` requirements, we need to setup and use a server. React provides a number of simple example servers, which can be downloaded from their [GitHub repository](https://github.com/reactjs/react-tutorial/). These simple servers are currently available in Node, Python, Ruby, PHP, and Go.

###### Initial HTML
The default HTML template for this basic app is as follows,

```
<!DOCTYPE html>
<html>
  <head>
    <title>Hello React</title>
    <!-- required react files -->
    <script src="build/react.js"></script>
    <script src="build/JSXTransformer.js"></script>
  </head>
  <body>
    <div id="content"></div>
    <script type="text/jsx">
      // Your code here
    </script>
  </body>
</html>
```

Our React JavaScript code will be added between the script tags in the body. However, we would normally abstract such code to a separate file.

##### First component
One of the fundamental precepts of React is the development and implementation of modular, composable components.

For the comment box component, we need the following structure

```
- CommentBox
  - CommentList
    - Comment
  - CommentForm
```

The `CommentBox` itself is simply a basic `<div>` element

```
var CommentBox = React.createClass({
  render: function() {
    return (
      <div className="commentBox">
      Hello World
      </div>
    );
  }
});
React.render(
  <CommentBox />,
  document.getElementById('content')
);
```

Again, this is JSX which is then translated by the JSX precompiler to plain JavaScript.
