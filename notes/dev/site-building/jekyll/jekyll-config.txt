### Jekyll - Configuration Options

An overview of some of the configuration options available in Jekyll. This overview is not exhaustive. Further details are 
available on the [Jekyll](http://jekyllrb.com/docs/configuration/) website.

#### Contents
* Config settings
  * Global
  * Build command options
* Front matter defaults
  * Overview
  * Precedence
* Default config
* Markdown options
  * Kramdown (GitHub flavoured Markdown)
  * Custom processors

##### Config settings - Global configuration
Some of the global configurations setting for Jekyll include

* site source
* site destination
* safe = disable any custom plugins, and also ignore symbolic links
* exclude = exclude specified directories and files relative to the root directory
* include = force inclusion of directories and files in the conversion
* keep files = useful to specify files to keep during site build (ie: files not generated by jekyll)
* time zone = set time zone for site generation
* encoding = specify a definite encoding of files. Default is `utf-8`.
* defaults = allows defaults to be set for *YAML* front matter

##### Config settings - Build command options
Options can also be added at the time of a site build. These options include

* regeneration = site will be auto-regenerated if files are modified
* configuration = specify custom config files. Cascading effect occurs, and settings in later config files will 
override earlier files
* draft - tells the build to process draft files
* future - forces publication of posts with a future date
* LSI - produces an index for related posts
* Limit posts - restrict the number of posts to parse and publish

*NB:* destination directory is wiped clean for each build
*NB:* do not use tabs in config files

##### Front matter defaults - Overview
*YAML* front matter allows a developer/designer to easily specify configuration for a given site page or post. However, 
this configuration may lead to repetition of common options, such as post author, category, default layout, and so on.

To avoid such repetition, we can add default configuration options to the site's `_config.yml` file. We specify these 
defaults using the `defaults` key.

The `defaults` key stores an array with scope/value pairs, which define defaults that should be set for a given file path 
and, optionally, file type in that path.

It is also possible to set multiple scope/value pairs for defaults in our `_config.yml` file.

##### Front matter defaults - Precedence
All configuration settings specified in the `defaults`section of a `_config.yml` file will be applied by Jekyll. However, 
it is also possible to override settings by specifying a more specific path for the scope.


