### GitHub - cURL - Issues

Notes on using cURL to query GitHub for *Issues* data.
[GitHub API](https://developer.github.com/v3/issues/)

#### Contents
* General
  * List Issues
  * List Issues for a Repository
  * Get a Single Issue
* Assignees
  * List Assignees
  * Check Assignee

##### General - List Issues
It is currently possible to query for an authenticated user's repository issues. This includes the following options:

* List all issues for an authenticated user, including owned visible repositories, member repositories, and
organisation repositories.
* List all issues for an authenticated user, including owned visible and member repositories.
* List all issues for an authenticated user's specified organisation.

These queries can also be supplemented with the following parameters:

* direction (string) - A direction may be set for the sort order, which can either be ascending or descending. Default is descending.
* filter (string) - This filter indicates the type of issues to return. These can be one of the following:
  * all: all issues the authenticated user can see, regardless of creation or participation
  * assigned: issues assigned to the user
  * created: issues created by the user
  * mentioned: issues mentioning the user
  * subscribed: issues for subscribed updates for the user
  * NB: the default filter is *assigned*
* labels (string) - A comma separated list of label names
* since (string) - A specified date from which issues will be returned. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
* sort (string) - Preferred sort order, which may include the following:
  * comments
  * created
  * updated
  * NB: the default sort oder is *created*
* state (string) - This indicates the state of the issues to return, which may include the following:
  * all
  * closed
  * open
  * NB: the default is *open*

##### General - List Issues for a repository
Get the latest issues for a specified repository. It will also accept the following parameters:

* assignee (string) - Name of a user, if specific. Otherwise *none* for issues with no assigned user, or \*\ for any user
* creator (string) - User that created the issue
* direction (string) - Direction of the sort, which can be either ascending or descending. NB: default is descending
* labels (string) - Comma separated list of label names
* mentioned (string) - User mentioned in the issue
* milestone (integer or string) - Integer refers to milestone number. String allows any milestone. NB: if the string is set to *none*, issues without milestones are returned
* since (string) - A specified date from which issues will be returned. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
* sort (string) - Preferred sort order, which may include the following:
  * comments
  * created
  * updated
  * NB: the default sort oder is *created*
* state (string) - This indicates the state of the issues to return, which may include the following:
  * all
  * closed
  * open
  * NB: the default is *open*

##### General - Get a Single Issue
It's important to note with this request, that the API defines every pull request as an issue, but not every issues as a
pull request. It also notes that if the issue is not a pull request, the response omits the *pull_request* attribute.

 
##### Assignees - List Assignees
This will list all of the available assignees, including owner and collaborators, for issues.

##### Assignees - Check Assignee 
It is also possible to check if a particular user has been assigned to a repository.

