### GitHub - cURL - Activity

A few notes on using cURL to query GitHub for *Activity* data.
[GitHub API](https://developer.github.com/v3/activity/)

#### Contents
* Events
* Event Types & Payloads
* Feeds
* Notifications
* Starring
* Watching

##### Events
This is a read-only API for events in GitHub. These events are used to drive the activity streams 
currently available on the site.

API options include:
* List public events
* List repository events
* List issue events for a specified repository
* List public events for a network of repositories (eg: Django)
* List public events for an organisation (eg: again, Django)
* List public events that a user has received
* List events performed by a user
* List public events performed by a user
* List events for an organisation

*NB:* Some of the above API options will only work for an authenticated user. 

##### Event Types & Payloads
Each event has a similar *JSON* schema. However, a unique *payload* object is determined by its event type.

Event names are used by *repository webhooks*, and specifiy the events a webhook should receive.

*NB:* Some of the events the above section of the API may not be rendered in the timeline.

##### Notifications
Notifications on GitHub are powered by *watched repositories*. For example, users receive notifications for
discussions in watched repositories.

API options include:
* Issues and their comments
* Pull requests and their comments
* Comments on any commits

##### Starring
Starring a repository allows a user to bookmark their chosen repository. The number of stars per repository
simply reflects the number of starred users per repository.

*NB:* Currently, stars have no effect on notifications or a user's activity feed.

API options include:
* List stargazers
* List repositories being starred
  * List per specified user
  * List per authenticated user

*List repositories being starred* also accepts parameters to define *sort* and *direction*. 
For *sort*, we can specify *created* for the repository star, and *updated*. Default is *created*.
For *direction* we can simply define either an ascending or descending sort order, and the default is descending.

##### Watching
A registered user who watches a repository will receive notifications on new discussions etc.

API options include:
* List watchers
* List repositories being watched
* Get a repository subscription 

JSON results for watched repositories require standard paging.
